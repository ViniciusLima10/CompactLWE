

# This file was *autogenerated* from the file parametros.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_32 = Integer(32); _sage_const_1000 = Integer(1000); _sage_const_1002 = Integer(1002); _sage_const_16 = Integer(16); _sage_const_86 = Integer(86); _sage_const_1001 = Integer(1001); _sage_const_1 = Integer(1)
from sage.all import log

# Define parameters
q = _sage_const_2 **_sage_const_32 
n = _sage_const_1000 
m = _sage_const_1002 
t = _sage_const_2 **_sage_const_16 
w = _sage_const_86 
b = _sage_const_1001 

# Check conditions
def check_parameters(q, n, m, t, w, b):
    conditions = {
        "Condition 1: n + 1 < m < n^2": n + _sage_const_1  < m < n**_sage_const_2 ,
        "Condition 2: n < b": n < b,
        "Condition 3: (2 * log2(b) * b + 2) * b < q": ((_sage_const_2  * log(b, _sage_const_2 ) * b + _sage_const_2 ) * b) < q,
        "Condition 4: 2 * log2(b) < n": (_sage_const_2  * log(b, _sage_const_2 )) < n
    }
    
    # Print results
    for description, result in conditions.items():
        print(f"{description}: {'Passed' if result else 'Failed'}")

# Run the check
check_parameters(q, n, m, t, w, b)

